# LinkedIn Token Retriever üîê

*Autentica√ß√£o OAuth 2.0 via LinkedIn com exibi√ß√£o de tokens e IDs √∫teis para automa√ß√µes.*

![MIT License](https://img.shields.io/github/license/seuusuario/linkedin_token)

---

## üìë √çndice

1. [Vis√£o Geral](#vis√£o-geral)
2. [Funcionalidades](#funcionalidades)
3. [Pr√©-requisitos](#pr√©-requisitos)
4. [Configura√ß√£o do Ambiente](#configura√ß√£o-do-ambiente)
5. [Execu√ß√£o](#execu√ß√£o)
6. [Estrutura do Projeto](#estrutura-do-projeto)
7. [Personaliza√ß√£o](#personaliza√ß√£o)
8. [Licen√ßa](#licen√ßa)

---

## Vis√£o Geral

Este projeto √© uma aplica√ß√£o **Flask** simples para autenticar via **LinkedIn OAuth 2.0** e capturar os seguintes dados:

* Access Token
* Refresh Token (se aplic√°vel)
* Tempo de expira√ß√£o do token
* Person ID (ID do perfil pessoal)
* Organization ID (ID da p√°gina empresarial)

Ideal para desenvolvedores que precisam testar ou configurar integra√ß√µes com a API do LinkedIn.

---

## Funcionalidades

* Autentica√ß√£o com LinkedIn OAuth 2.0
* Visualiza√ß√£o dos dados autenticados em interface web
* Suporte a m√∫ltiplos escopos (perfil, p√°ginas, social sharing)

---

## Pr√©-requisitos

1. **Criar um aplicativo no LinkedIn Developer:**
   Acesse [LinkedIn Developer](https://www.linkedin.com/developers/apps)

   * Adicione os produtos:

     * "Sign In with LinkedIn"
     * "Marketing Developer Platform"
   * Copie seu `Client ID` e `Client Secret`
   * Defina o redirect URI para:

     ```http
     http://127.0.0.1:5000/callback
     ```

2. **Permiss√µes necess√°rias (scopes):**

   * `openid profile email`
   * `r_organization_admin`
   * `r_organization_social`
   * `rw_organization_admin`
   * `w_organization_social`
   * `w_member_social`

3. **Crie o arquivo `.env` com as credenciais:**

   ```env
   LINKEDIN_CLIENT_ID=SEU_CLIENT_ID
   LINKEDIN_CLIENT_SECRET=SEU_CLIENT_SECRET
   LINKEDIN_REDIRECT_URI=http://127.0.0.1:5000/callback
   ```

---

## Configura√ß√£o do Ambiente

```bash
# 1. Crie o ambiente virtual
python3 -m venv venv

# 2. Ative o ambiente
source venv/bin/activate   # Linux/macOS
venv\Scripts\activate      # Windows

# 3. Instale as depend√™ncias
pip install -r requirements.txt
```

---

## Execu√ß√£o

```bash
# Rode o app Flask
python app.py
```

Acesse no navegador:

```text
http://127.0.0.1:5000
```

---

## Estrutura do Projeto

```text
linkedin_token/
‚îú‚îÄ‚îÄ app.py               # Aplica√ß√£o principal Flask
‚îú‚îÄ‚îÄ config.py            # Configura√ß√µes OAuth e helpers
‚îú‚îÄ‚îÄ templates/           # P√°ginas HTML
‚îÇ   ‚îú‚îÄ‚îÄ home.html        # P√°gina inicial com bot√£o de login
‚îÇ   ‚îî‚îÄ‚îÄ dashboard.html   # Exibi√ß√£o dos dados p√≥s-login
‚îú‚îÄ‚îÄ .env                 # Vari√°veis de ambiente (n√£o versionado)
‚îú‚îÄ‚îÄ requirements.txt     # Depend√™ncias do projeto
```

---

## Personaliza√ß√£o

* **Templates**: edite `templates/home.html` e `dashboard.html` para mudar layout.
* **Escopos**: altere os escopos desejados em `config.py` para testar diferentes permiss√µes.

---

## Licen√ßa

Distribu√≠do sob a licen√ßa [MIT](LICENSE).
